// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum userRole {
  student
  admin
}

model Student_program {
  program_id   Int       @id @default(autoincrement()) @db.Int
  program_name String    @db.VarChar(100)
  student      Student[]

  @@unique([program_name])
  @@map("student_programs")
}

model Student_class {
  class_id   Int       @id @default(autoincrement()) @db.Int
  class_name String    @db.VarChar(100)
  student    Student[]

  @@unique([class_name])
  @@map("student_classes")
}

model Student {
  id              String          @id @default(uuid()) @db.VarChar(36)
  name            String          @db.VarChar(100)
  nim             String          @unique @db.VarChar(20)
  email           String          @unique @db.VarChar(100)
  password        String          @db.VarChar(60)
  class_id        Int             @db.Int
  program_id      Int             @db.Int
  student_class   Student_class   @relation(fields: [class_id], references: [class_id])
  student_program Student_program @relation(fields: [program_id], references: [program_id])

  student_verification Student_verification?

  @@map("students")
}

model Admin {
  id       String @id @default(uuid()) @db.VarChar(40)
  name     String @db.VarChar(100)
  password String @db.VarChar(60)
  email    String @unique @db.VarChar(100)
  level    Int    @db.SmallInt

  @@map("admins")
}

enum verification_status {
  active
  inactive
}

model Student_verification {
  student_id          String              @id @db.VarChar(36)
  verification_status verification_status @default(inactive)
  verification_sent   DateTime            @default(now()) @db.Timestamp()
  verification_date   DateTime?           @db.Timestamp()
  student             Student             @relation(fields: [student_id], references: [id])

  @@map("Student_verifications")
}
